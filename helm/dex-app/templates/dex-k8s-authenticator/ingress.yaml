{{ if or (eq (include "has-giantswarm-connector" .) "true") .Values.oidc.customer.enabled }}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ include "resource.dexk8sauth.name" . }}
  labels:
    {{- include "dexk8sauth.labels.common" . | nindent 4 }}
  annotations:
    {{- if .Values.ingress.tls.letsencrypt }}
    cert-manager.io/cluster-issuer: letsencrypt-giantswarm
    {{- else if ne .Values.ingress.tls.clusterIssuer "" }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.clusterIssuer }}
    {{- end }}
    {{- if .Values.ingress.externalDNS }}
    {{- if .Values.isWorkloadCluster }}
    external-dns.alpha.kubernetes.io/hostname: login.{{ .Values.baseDomain }}
    {{- else if .Values.isManagementCluster }}
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.oidc.staticClients.dexK8SAuthenticator.clientAddress }}
    {{- end }}
    giantswarm.io/external-dns: managed
    {{- end }}
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    {{- if .Values.isWorkloadCluster }}
      - login.{{ .Values.baseDomain }}
    {{- else if .Values.isManagementCluster }}
      - {{ .Values.oidc.staticClients.dexK8SAuthenticator.clientAddress }}
    {{- end }}
    {{- if .Values.ingress.tls.letsencrypt }}
    secretName: {{ include "resource.dexk8sauth.name" . }}-le
    {{- else }}
    secretName: {{ include "resource.dexk8sauth.name" . }}
    {{- end }}
  rules:
  - http:
      paths:
{{- if eq (include "has-giantswarm-connector" .) "true" }}
      - path: /admin/
        pathType: Prefix
        backend:
  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
          service:
            name: {{ include "resource.dexk8sauth.name" . }}-giantswarm
            port:
              name: http
  {{- else }}
          serviceName: {{ include "resource.dexk8sauth.name" . }}-giantswarm
          servicePort: http
  {{- end }}
{{- end }}
{{- if .Values.oidc.customer.enabled }}
{{- if .Values.oidc.customer.connectors -}}
{{ $values := .Values -}}
{{ $resource := . }}
{{- range .Values.oidc.customer.connectors }}
      - path: /
        pathType: Prefix
        backend:
  {{- if $resource.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
          service:
            name: {{ include "resource.dexk8sauth.name" $resource }}-{{ .id }}
            port:
              name: http
  {{- else }}
          serviceName: {{ include "resource.dexk8sauth.name" $resource }}-{{ .id }}
          servicePort: http
  {{- end }}
{{- end }}
{{- else }}
      - path: /
        pathType: Prefix
        backend:
  {{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
          service:
            name: {{ include "resource.dexk8sauth.name" . }}-customer
            port:
              name: http
  {{- else }}
          serviceName: {{ include "resource.dexk8sauth.name" . }}-customer
          servicePort: http
  {{- end }}
{{ end }}
{{ end }}
  {{- if .Values.isWorkloadCluster }}
    host: login.{{ .Values.baseDomain }}
  {{- else if .Values.isManagementCluster  }}
    host: {{ .Values.oidc.staticClients.dexK8SAuthenticator.clientAddress }}
  {{- end }}
{{ end }}
