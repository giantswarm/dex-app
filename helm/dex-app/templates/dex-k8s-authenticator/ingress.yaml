{{ if or (eq (include "has-giantswarm-connector" .) "true") .Values.oidc.customer.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "resource.dexk8sauth.name" . }}
  labels:
    {{- include "dexk8sauth.labels.common" . | nindent 4 }}
  annotations:
    {{- if .Values.ingress.tls.letsencrypt }}
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-giantswarm"
    {{- end }}
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    {{- if .Values.isWorkloadCluster }}
      - login.{{ .Values.baseDomain }}
    {{- else }}
      - {{ .Values.oidc.staticClients.dexK8SAuthenticator.clientAddress }}
    {{- end }}
    {{- if .Values.ingress.tls.letsencrypt }}
    secretName: {{ include "resource.dexk8sauth.name" . }}-le
    {{- else }}
    secretName: {{ include "resource.dexk8sauth.name" . }}
    {{- end }}
  rules:
  {{- if .Values.isWorkloadCluster }}
  - host: login.{{ .Values.baseDomain }}
  {{- else }}
  - host: {{ .Values.oidc.staticClients.dexK8SAuthenticator.clientAddress }}
  {{- end }}
    http:
      paths:
{{- if eq (include "has-giantswarm-connector" .) "true" }}
      - path: /admin/
        pathType: Prefix
        backend:
          service:
            name: {{ include "resource.dexk8sauth.name" . }}-giantswarm
            port:
              name: http
{{- end }}
{{- if .Values.oidc.customer.enabled }}
{{- if .Values.oidc.customer.connectors -}}
{{ $values := .Values -}}
{{ $resource := . }}
{{- range .Values.oidc.customer.connectors }}
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "resource.dexk8sauth.name" $resource }}-{{ .id }}
            port:
              name: http
{{- end }}
{{- else }}
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "resource.dexk8sauth.name" . }}-customer
            port:
              name: http
{{ end }}
{{ end }}
{{ end }}
