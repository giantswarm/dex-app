apiVersion: v1
kind: Secret
metadata:
  labels:
{{ include "dex.labels" . | indent 4 }}
    app.kubernetes.io/component: dex
  name: dex
stringData:
  config.yaml: |-
    web:
      http: 0.0.0.0:5556
    storage:
      type: kubernetes
      config:
        inCluster: true
    logger:
      level: debug
    oauth2:
      responseTypes: ["code", "token", "id_token"]
      alwaysShowLoginScreen: false
      skipApprovalScreen: true
    enablePasswordDB: false
    frontend:
      logoURL: http://styleguide.io/o/giantswarm/logo_simplified/giantswarm_logo_simplified.png
    issuer: https://{{ .Values.Installation.V1.GiantSwarm.OIDC.IssuerAddress }}
    expiry:
      signingKeys: "{{ .Values.Installation.V1.GiantSwarm.OIDC.Expiry.SigningKeys }}"
      idTokens: "{{ .Values.Installation.V1.GiantSwarm.OIDC.Expiry.IdTokens }}"
    staticClients:
    - id: dex-k8s-authenticator
      redirectURIs:
      - https://{{ .Values.Installation.V1.GiantSwarm.OIDC.ClientAddress }}/callback
      name: dex-k8s-authenticator
      secret: {{ .Values.Installation.V1.Secret.OIDC.ClientSecret }}
    - id: {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.GsCLIAuth.ClientID }}
      redirectURIs:
      - {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.GsCLIAuth.Address }}
      name: gscliauth
      secret: {{ .Values.Installation.V1.Secret.OIDC.ClientSecret }}
    connectors:
    - type: {{ .Values.Installation.V1.GiantSwarm.OIDC.Type }}
      id: {{ .Values.Installation.V1.GiantSwarm.OIDC.Type }}
      name: {{ .Values.Installation.V1.GiantSwarm.OIDC.Name }}
      config:
{{ .Values.Installation.V1.Secret.OIDC.ConnectorConfig | indent 8 }}
