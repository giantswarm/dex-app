{{ if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{ else }}
apiVersion: networking.k8s.io/v1beta1
{{ end }}
kind: Ingress
metadata:
  name: {{ include "resource.dex.name" . }}
  labels:
    {{- include "dex.labels.common" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: nginx
    {{- if .Values.Installation.V1.GiantSwarm.OIDC.Letsencrypt }}
    kubernetes.io/tls-acme: "true"
    {{- end }}
spec:
  tls:
    - hosts:
        - {{ .Values.Installation.V1.GiantSwarm.OIDC.IssuerAddress | quote }}
      {{- if .Values.Installation.V1.GiantSwarm.OIDC.Letsencrypt }}
      secretName: {{ include "resource.dex.name" . }}-tls-le
      {{- else }}
      secretName: {{ include "resource.dex.name" . }}-tls
      {{- end }}
  rules:
    - host: {{ .Values.Installation.V1.GiantSwarm.OIDC.IssuerAddress | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
{{ if .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
              service:
                name: {{ include "resource.dex.name" . }}
                port:
                  number: 32000
{{ else }}
              serviceName: {{ include "resource.dex.name" . }}
              servicePort: 32000
{{ end }}
