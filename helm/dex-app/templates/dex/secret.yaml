apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "dex.labels.common" . | nindent 4 }}
  name: {{ include "resource.dex.name" . }}
stringData:
  config.yaml: |-
    web:
      http: 0.0.0.0:5556
      allowedOrigins:
      - {{ .Values.Installation.V1.GiantSwarm.Happa.Address }}
      - {{ .Values.Installation.V1.Monitoring.Grafana.Address }}
    storage:
      type: kubernetes
      config:
        inCluster: true
    logger:
      level: debug
    oauth2:
      responseTypes: ["code", "token", "id_token"]
      alwaysShowLoginScreen: false
      skipApprovalScreen: true
    enablePasswordDB: false
    oidcGroupsPrefix: true
    frontend:
      logoURL: https://s.giantswarm.io/brand/1/logo.svg
      theme: dark
    issuer: https://{{ .Values.Installation.V1.GiantSwarm.OIDC.IssuerAddress }}
    expiry:
      signingKeys: "{{ .Values.Installation.V1.GiantSwarm.OIDC.Expiry.SigningKeys }}"
      idTokens: "{{ .Values.Installation.V1.GiantSwarm.OIDC.Expiry.IdTokens }}"
    staticClients:
    - id: {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.Grafana.ClientID }}
      public: true
      redirectURIs:
      - {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.Grafana.Address }}
      name: grafana
    - id: {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.GSCLIAuth.ClientID }}
      public: true
      name: gscliauth
    - id: {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.Happa.ClientID }}
      public: true
      redirectURIs:
      - {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.Happa.Address }}
      - http://localhost:7000
      name: happa
    - id: dex-k8s-authenticator
      redirectURIs:
      {{- if .Values.Installation.V1.GiantSwarm.OIDC.Enabled }}
      - https://{{ .Values.Installation.V1.GiantSwarm.OIDC.ClientAddress }}/callback
      {{- else }}
      - https://{{ .Values.Installation.V1.GiantSwarm.OIDC.ClientAddress }}/admin/callback
      {{- end }}
      name: dex-k8s-authenticator
      secret: {{ .Values.Installation.V1.Secret.OIDC.ClientSecret }}
      trustedPeers:
      - {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.GSCLIAuth.ClientID }}
      - {{ .Values.Installation.V1.GiantSwarm.OIDC.StaticClients.Happa.ClientID }}
    connectors:
    - type: github
      id: giantswarm
      name: GitHub for Giant Swarm staff
      config:
        clientID: {{ .Values.Installation.V1.Secret.OIDC.GSConnectorConfig.ClientID }}
        clientSecret: {{ .Values.Installation.V1.Secret.OIDC.GSConnectorConfig.ClientSecret }}
        loadAllGroups: false
        redirectURI: https://{{ .Values.Installation.V1.GiantSwarm.OIDC.IssuerAddress }}/callback
        orgs:
        - name: giantswarm
          teams:
          - {{ .Values.Installation.V1.Secret.OIDC.GSConnectorConfig.Team }}
    {{- if .Values.Installation.V1.GiantSwarm.OIDC.Enabled }}
    - type: {{ .Values.Installation.V1.GiantSwarm.OIDC.Type }}
      id: customer
      name: {{ .Values.Installation.V1.GiantSwarm.OIDC.Name }}
      config:
        {{- .Values.Installation.V1.Secret.OIDC.ConnectorConfig | nindent 8 }}
    {{- end }}
