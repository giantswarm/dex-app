apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "dex.labels.common" . | nindent 4 }}
  name: {{ include "resource.dex.name" . }}
stringData:
  config.yaml: |-
    web:
      http: 0.0.0.0:5556
      {{- if eq (include "is-any-service-listed" .) "true" }}
      allowedOrigins:
      {{- range $k, $v := .Values.services }}
      {{- if and (ne $k "kubernetes") (ne (len $v.address) 0) }}
      {{- if kindIs "slice" $v.address }}
      {{- range $item := $v.address }}
      - {{ $item }}
      {{- end }}
      {{- else }}
      - {{ $v.address }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
    telemetry:
      http: 0.0.0.0:5558
    storage:
      type: kubernetes
      config:
        inCluster: true
    logger:
      level: debug
      format: json
    oauth2:
      responseTypes: ["code", "token", "id_token"]
      alwaysShowLoginScreen: false
      skipApprovalScreen: true
    enablePasswordDB: false
    oidcGroupsPrefix: true
    frontend:
      logoURL: https://s.giantswarm.io/brand/1/logo.svg
    {{- if eq (include "is-workload-cluster" .) "true" }}
    issuer: https://dex.{{ .Values.baseDomain }}
    {{- else }}
    issuer: https://{{ .Values.oidc.issuerAddress }}
    {{- end }}
    expiry:
      signingKeys: "{{ .Values.oidc.expiry.signingKeys }}"
      idTokens: "{{ .Values.oidc.expiry.idTokens }}"
      {{- if .Values.oidc.expiry.refreshTokens }}
      refreshTokens:
        {{- if .Values.oidc.expiry.refreshTokens.reuseInterval }}
        reuseInterval: "{{ .Values.oidc.expiry.refreshTokens.reuseInterval }}"
        {{- end }}
        {{- if .Values.oidc.expiry.refreshTokens.validIfNotUsedFor }}
        validIfNotUsedFor: "{{ .Values.oidc.expiry.refreshTokens.validIfNotUsedFor }}"
        {{- end }}
        {{- if .Values.oidc.expiry.refreshTokens.absoluteLifetime }}
        absoluteLifetime: "{{ .Values.oidc.expiry.refreshTokens.absoluteLifetime }}"
        {{- end }}
      {{- end }}
    staticClients:
    {{- if (and .Values.oidc.staticClients.gitopsui.clientID  .Values.oidc.staticClients.gitopsui.clientSecret) }}
    - id: {{ .Values.oidc.staticClients.gitopsui.clientID }}
      secret: {{ .Values.oidc.staticClients.gitopsui.clientSecret }}
      name: gitopsui
      redirectURIs:
      - {{ .Values.oidc.staticClients.gitopsui.redirectURI }}
      - http://localhost:9001/oauth2/callback
      {{- include "trusted-peers" .Values.oidc.staticClients.gitopsui.trustedPeers }}
    {{- end }}
    {{- if .Values.oidc.staticClients.grafana.clientID }}
    - id: {{ .Values.oidc.staticClients.grafana.clientID }}
      public: true
      redirectURIs:
      - {{ .Values.oidc.staticClients.grafana.redirectURI }}
      name: grafana
      {{- include "trusted-peers" .Values.oidc.staticClients.grafana.trustedPeers }}
    {{- end }}
    {{- if .Values.oidc.staticClients.gsCLIAuth.clientID }}
    - id: {{ .Values.oidc.staticClients.gsCLIAuth.clientID }}
      public: true
      name: gscliauth
      {{- include "trusted-peers" .Values.oidc.staticClients.gsCLIAuth.trustedPeers }}
    {{- end }}
    {{- if .Values.oidc.staticClients.happa.clientID }}
    - id: {{ .Values.oidc.staticClients.happa.clientID }}
      public: true
      redirectURIs:
      - {{ .Values.oidc.staticClients.happa.redirectURI }}
      - http://localhost:7000
      name: happa
      {{- include "trusted-peers" .Values.oidc.staticClients.happa.trustedPeers }}
    {{- end }}
    {{- if .Values.isManagementCluster }}
    - id: dex-k8s-authenticator
      redirectURIs:
      {{- if .Values.oidc.customer.enabled }}
      - https://{{ .Values.oidc.staticClients.dexK8SAuthenticator.clientAddress }}/callback
      {{- end }}
      {{- if .Values.oidc.giantswarm.connectorConfig.clientID }}
      - https://{{ .Values.oidc.staticClients.dexK8SAuthenticator.clientAddress }}/admin/callback
      {{- end }}
      name: dex-k8s-authenticator
      secret: {{ .Values.oidc.staticClients.dexK8SAuthenticator.clientSecret }}
      {{- include "trusted-peers" ( concat (.Values.oidc.staticClients.dexK8SAuthenticator.trustedPeers | default list ) (list .Values.oidc.staticClients.happa.clientID .Values.oidc.staticClients.gsCLIAuth.clientID) ) }}
    {{- end }}
    {{- if eq (include "is-workload-cluster" .) "true" }}
    - id: dex-k8s-authenticator
      redirectURIs:
      - https://login.{{ .Values.baseDomain }}/callback
      {{- if .Values.oidc.giantswarm.connectorConfig.clientID }}
      - https://login.{{ .Values.baseDomain }}/admin/callback
      {{- end }}
      name: dex-k8s-authenticator
      secret: {{ .Values.oidc.staticClients.dexK8SAuthenticator.clientSecret }}
      {{- include "trusted-peers" ( concat (.Values.oidc.staticClients.dexK8SAuthenticator.trustedPeers | default list ) (list .Values.oidc.staticClients.gsCLIAuth.clientID) ) }}
    {{- end }}
    {{- include "print-clean-extra-static-clients" .Values.oidc.extraStaticClients }}
    connectors:
    {{- if .Values.oidc.giantswarm.connectorConfig.clientID }}
    - type: github
      id: giantswarm
      name: GitHub for Giant Swarm staff
      config:
        clientID: {{ .Values.oidc.giantswarm.connectorConfig.clientID }}
        clientSecret: {{ .Values.oidc.giantswarm.connectorConfig.clientSecret }}
        loadAllGroups: false
        {{- if eq (include "is-workload-cluster" .) "true" }}
        redirectURI: https://dex.{{ .Values.baseDomain }}/callback
        {{- else }}
        redirectURI: https://{{ .Values.oidc.issuerAddress }}/callback
        {{- end }}
        orgs:
        - name: giantswarm
          teams:
          - {{ .Values.oidc.giantswarm.connectorConfig.team }}
    {{- end }}
    {{- if .Values.oidc.giantswarm.connectors }}
    {{- range .Values.oidc.giantswarm.connectors }}
    - type: {{ .connectorType }}
      id: {{ .id }}
      name: {{ .connectorName }}
      config:
        {{- .connectorConfig | nindent 8 }}
    {{- end }}
    {{- end }}
    {{- if .Values.oidc.customer.connectors }}
    {{- range .Values.oidc.customer.connectors }}
    - type: {{ .connectorType }}
      id: {{ .id }}
      name: {{ .connectorName }}
      config:
        {{- .connectorConfig | nindent 8 }}
    {{- end }}
    {{- end }}
    {{- if .Values.oidc.customer.connectorConfig }}
    - type: {{ .Values.oidc.customer.connectorType }}
      id: customer
      name: {{ .Values.oidc.customer.connectorName }}
      config:
        {{- .Values.oidc.customer.connectorConfig | nindent 8 }}
    {{- end }}
